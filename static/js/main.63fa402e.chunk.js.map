{"version":3,"sources":["index.js"],"names":["Header","styled","padding","backgroundColor","TileView","props","display","spacing","gridGap","gridTemplateColumns","minCellWidth","defaultProps","Photo","width","objectFit","App","state","images","fetch","then","response","json","data","setState","slice","console","log","this","map","image","src","id","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kNAMMA,EAASC,YAAO,SAAPA,CAAiB,CAC9BC,QAAS,GACTC,gBAAiB,kBAGbC,EAAWH,YAAO,MAAPA,EAAc,SAACI,GAAD,MAAY,CACzCC,QAAS,OACTJ,QAASG,EAAME,QACfC,QAASH,EAAME,QACfE,oBAAoB,4BAAD,OAA8BJ,EAAMK,aAApC,aAJU,IAO/BN,EAASO,aAAe,CACtBJ,QAAS,GACTG,aAAc,KAGhB,IAAME,EAAQX,YAAO,MAAPA,CAAc,CAC1BK,QAAS,QACTO,MAAO,OACPC,UAAW,UAGPC,E,4MACJC,MAAQ,CACNC,OAAQ,I,uDAEV,WAAqB,IAAD,OAClBC,MAAM,iCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZN,OAAQK,EAAKE,MAAM,EAAG,KAEzB,GACJ,G,oBACD,WAEE,OADAC,QAAQC,IAAIC,KAAKX,OAEf,gCACE,eAAChB,EAAD,WACE,sDADF,OAGA,cAACI,EAAD,UACGuB,KAAKX,MAAMC,OAAOW,KAAI,SAACC,GAAD,OACrB,cAACjB,EAAD,CAEEkB,IAAG,gDAA2CD,EAAME,KAD/CF,EAAME,GAFQ,QAS9B,K,GA9BeC,IAAMC,WAiClBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACvB,EAAD,IAASmB,E","file":"static/js/main.63fa402e.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"@emotion/styled\";\n\nimport \"./styles.css\";\n\nconst Header = styled(\"header\")({\n  padding: 16,\n  backgroundColor: \"hsl(0 0% 94%)\"\n});\n\nconst TileView = styled(\"div\")((props) => ({\n  display: \"grid\",\n  padding: props.spacing,\n  gridGap: props.spacing,\n  gridTemplateColumns: `repeat(auto-fill, minmax(${props.minCellWidth}px, 1fr))`\n}));\n\nTileView.defaultProps = {\n  spacing: 16,\n  minCellWidth: 240\n};\n\nconst Photo = styled(\"img\")({\n  display: \"block\",\n  width: \"100%\",\n  objectFit: \"cover\"\n});\n\nclass App extends React.Component {\n  state = {\n    images: []\n  };\n  componentDidMount() {\n    fetch(\"https://picsum.photos/v2/list\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          images: data.slice(0, 30)\n        });\n      });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <Header>\n          <h1>&#128247; Picsum </h1>x\n        </Header>\n        <TileView>\n          {this.state.images.map((image) => (\n            <Photo\n              key={image.id}\n              src={`https://picsum.photos/1000/1000?image=${image.id}`}\n            />\n          ))}\n        </TileView>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}